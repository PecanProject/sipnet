name: Build and Deploy Docs

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && !github.event.pull_request.draft) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz
          python3 -m pip install --upgrade pip
          python3 -m pip install mkdocs mkdocs-material pymdown-extensions

      - name: "Build docs"
        run: |
          make clean document

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    if: >
      ${{
        (github.event_name == 'push') ||
        (github.event_name == 'pull_request' &&
         github.event.pull_request.head.repo.full_name == github.repository)
      }}
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: ${{ github.event_name == 'pull_request' }}

      - name: Add deployment URL to summary
        env:
          DEPLOY_URL: ${{ steps.deployment.outputs.page_url }}
          PREVIEW_URL: ${{ steps.deployment.outputs.preview_url }}
        run: |
          URL="${PREVIEW_URL:-$DEPLOY_URL}"
          echo "Deployed to: $URL" >> "$GITHUB_STEP_SUMMARY"

      - name: Comment preview URL on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        env:
          DEPLOY_URL: ${{ steps.deployment.outputs.page_url }}
          PREVIEW_URL: ${{ steps.deployment.outputs.preview_url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr_number = context.payload.pull_request.number;
            const url = process.env.PREVIEW_URL || process.env.DEPLOY_URL;
            const body = `Preview: ${url}`;
            await github.rest.issues.createComment({ owner, repo, issue_number: pr_number, body });
