/* SiPnET: Simplified PnET

   Author: Bill Sacks  wsacks@wisc.edu
   modified by... 
   John Zobitz zobitz@math.utah.edu
   Dave Moore dmoore1@ucar.edu 

   A simple box model of carbon cycling
   largely based on PnET
*/

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include "sipnet.h"
#include "runmean.h"
#include "util.h"
#include "spatialParams.h"

// begin definitions for choosing different model structures
// (1 -> true, 0 -> false)
#define CSV_OUTPUT 0 
//output .out file as a CSV file

//alternative transpiration methods modified by Dave Moore 
#define ALTERNATIVE_TRANS 0
// do we want to impliment alternative transpiration?

#define BALL_BERRY 0
//impliment a Ball Berry submodel to calculate gs from RH, CO2 and A
//MUST BE OFF for PENMAN MONTEITH TO RUN

#define PENMAN_MONTEITH_TRANS 0
//impliment a transpiration calculation based on the Penman-Monteith Equation.
//March 1st 2007 PM equation not really working.

//#define G 0
//assume that soil heat flux is zero;

#define GROWTH_RESP 0
// explicitly model growth resp., rather than including with maint. resp.


#define LLOYD_TAYLOR 0
// use Lloyd-Taylor model for soil respiration, in which temperature sensitivity decreases at higher temperatures?
// Lloyd-Taylor model is R = R0 * e^(E0 * (1/(-T0) - 1/(T - T0))) (see Lloyd and Taylor 1994, "On the temperature dependence of soil respiration") 
// where R0 is rate at 0 degrees C, T is soil temp., E0 and T0 are parameters

#define SEASONAL_R_SOIL 0 && !LLOYD_TAYLOR
// use different parameters for soil resp. (baseSoilResp and soilRespQ10) when tsoil < (some threshold)?
// if so, use standard parameters for warm soil, separate parameters for cold soil
// if we're using the Lloyd-Taylor model, we won't use different parameters at different temperatures

#define WATER_PSN 1
// does soil moisture affect photosynthesis?

#define WATER_HRESP 1
// does soil moisture affect heterotrophic respiration?

#define DAYCENT_WATER_HRESP 0 && WATER_HRESP
// use DAYCENT soil moisture function?

#define MODEL_WATER 1
// do we model soil water?
// if not, take soil wetness from climate file

#define COMPLEX_WATER 1 && MODEL_WATER
// do we use a more complex water submodel? (model evaporation as well as transpiration)
// when we use a complex water submodel, we always model snow
// if model water is off, then complex water is off: complex water wouldn't do anything

#define LITTER_WATER 0 && (COMPLEX_WATER)
// do we have a separate litter water layer, used for evaporation? 
// if complex water is off, then litter water is off: litter water layer wouldn't do anything

#define LITTER_WATER_DRAINAGE 1 && (LITTER_WATER)
// does water from the top layer drain down into bottom layer even if top layer not overflowing?
// if litter water is off, then litter water drainage is off: litter water drainage wouldn't do anything

#define SNOW (1 || (COMPLEX_WATER)) && MODEL_WATER
// keep track of snowpack, rather than assuming all precip. is liquid
// note: when using a complex water submodel, we ALWAYS keep track of snowpack
// if model water is off, then snow is off: snow wouldn't do anything

#define GDD 0
// use GDD to determine leaf growth? (note: mutually exclusive with SOIL_PHENOL)

#define SOIL_PHENOL 0 && !GDD
// use soil temp. to determine leaf growth? (note: mutually exclusive with GDD)

#define LITTER_POOL 0
// have extra litter pool, in addition to soil c pool

#define SOIL_MULTIPOOL 0 && !LITTER_POOL
// do we have a multipool approach to model soils?
// if LITTER_POOL == 1, then SOIL_MULTIPOOL will be 0 because we take care of litter with 
// the soil quality submodel. 

#define NUMBER_SOIL_CARBON_POOLS 3
// first number: number of pools we want to have.
// IF SOIL_MULTIPOOL=0, then NUMBER_SOIL_CARBON_POOLS = 1
// if SOIL_MULTIPOOL=1, then NUMBER_SOIL_CARBON_POOLS = number given

#define SOIL_QUALITY 0 && SOIL_MULTIPOOL
// do we have a soil quality submodel?
// we only do SOIL_QUALITY if SOIL_MULTIPOOL is turned on

#define MICROBES 0 && !SOIL_MULTIPOOL
// do we utilize microbes.  This will only be an option
// if SOIL_MULTIPOOL==0 and MICROBES ==1

#define STOICHIOMETRY 0 && MICROBES
// do we utilize stoichometric considerations for the microbial pool?
 
#define ROOTS 0
// do we model root dynamics?


// end definitions for choosing different model structures

// begin constant definitions

#define C_WEIGHT 12.0 // molecular weight of carbon
#define TEN_6 1000000.0 // for conversions from micro
#define TEN_9 1000000000.0 // for conversions from nano
#define SEC_PER_DAY 86400.0

// constants for tracking running mean of NPP:
#define MEAN_NPP_DAYS 5 // over how many days do we keep the running mean?
#define MEAN_NPP_MAX_ENTRIES MEAN_NPP_DAYS * 50 // assume that the most pts we can have is two per hour

// constants for tracking running mean of GPP:
#define MEAN_GPP_SOIL_DAYS 5 // over how many days do we keep the running mean?
#define MEAN_GPP_SOIL_MAX_ENTRIES MEAN_GPP_SOIL_DAYS * 50 // assume that the most pts we can have is one per hour


// some constants for water submodel:
#define LAMBDA 2501000. // latent heat of vaporization (J/kg)
#define LAMBDA_S 2835000. // latent heat of sublimation (J/kg)
#define RHO 1.3 // air density (kg/m^3)
#define CP 1005. // specific heat of air (J/(kg K))
#define GAMMA 66. // psychometric constant (Pa/K)
#define E_STAR_SNOW 0.6 /* approximate saturation vapor pressure at 0 degrees C (kPa)
			   (we assume snow temperature is 0 degrees C or slightly lower) */

#define TINY 0.000001 // to avoid those nasty divide-by-zero errors

// end constant definitions
